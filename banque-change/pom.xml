<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.banque</groupId>
  <artifactId>banque-change</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>banque-change</name>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.release>17</maven.compiler.release>
    <failOnMissingWebXml>false</failOnMissingWebXml>
  </properties>

  <dependencies>
    <!-- Jakarta EE API: provided by the WildFly container -->
    <dependency>
      <groupId>jakarta.platform</groupId>
      <artifactId>jakarta.jakartaee-api</artifactId>
      <version>9.1.0</version>
      <scope>provided</scope>
    </dependency>

    <!-- Ajoute d'autres dépendances nécessaires à l'implémentation EJB (JSON, logging...) -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.15.2</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
      <version>2.15.2</version>
    </dependency>

  </dependencies>

  <build>
    <plugins>

      <!-- Compiler plugin -->
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.11.0</version>
        <configuration>
          <release>${maven.compiler.release}</release>
        </configuration>
      </plugin>

      <!-- Standard JAR (implémentation EJB) will be produced as usual -->
      <!-- Add a "client" JAR that contains only API packages (interfaces/entities needed by clients) -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.4.0</version>
        <executions>
          <execution>
            <id>client-jar</id>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <classifier>client</classifier>
              <includes>
                <!-- Ajuste ces include en fonction des packages utilisés côté client -->
                <include>com/banque/change/remote/**</include>
                <include>com/banque/change/entity/**</include>
                <include>com/banque/change/dto/**</include>
              </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Optional: shade plugin could be used if you want a single "client" jar with specific content.
           Here we use maven-jar-plugin includes to keep things simple. -->

    </plugins>
  </build>
</project>